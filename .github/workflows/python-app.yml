# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  validate:

    runs-on: ubuntu-latest

    steps:
    - name: Init pipeline
      run: |
        echo "### Python pipeline has lunch! :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "### RunID: ${{ github.run_id }} Run Number: ${{github.run_number}} Run Attempt: ${{ github.run_attempt }}" >> $GITHUB_STEP_SUMMARY
    - uses: actions/checkout@v4
    - name: Check code action
      uses: ./.github/actions/check-code
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest libyear
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        echo "::warning::Get libyear metric.."
        echo "::debug::debug msg"
        libyear -r requirements.txt >> $GITHUB_STEP_SUMMARY
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest >> $GITHUB_STEP_SUMMARY
  
  build:
    needs: validate
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build image
      run: |
        docker image build -t testweb:0.12 .
    # - name: Remove old container
    #   run: |
    #     docker stop devweb
    #     docker rm devweb
    # - name: Run docker image
    #   run: |
    #     docker run -p 8080:5000 -d --name devweb testweb:0.12
    - name: End pipeline
      run: |
        echo "Local link http://localhost:8080/ "